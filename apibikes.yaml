openapi: 3.0.1
info:
  title: Sample API
  description: API description in Markdown.
  version: 1.0.0
tags:
  - name: bikes
    description: Operaciones con bicis
  - name: users
    description: Operaciones con usuarios
  - name: workshops
    description: Operaciones con talleres
  - name: mechanics
    description: Operaciones con mecánicos
  - name: repair-orders
    description: Operaciones con órdenes de reparación
servers:
  - url: 'https://apibikes.com'
paths:
  /bikes:
    get:
      tags:
        - bikes
      summary: Devuelve bicis registradas.
      description: |
        Lista las bicis solicitadas segun filtros aplicados
        Permite filtrar mediante brand o model incluso ambos a la vez
          - brand: Filtra por marca
          - model: Filtra por modelo
      parameters:
        - name: brand
          in: query
          description: Filtro por marca de bici
          required: false
          schema:
            type: string
        - name: model
          in: query
          description: Filtro por modelo
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BikeOutDto'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /bikes/{bikeId}:
    get:
      tags:
        - bikes
      summary: Detalle de una bici
      description: Devuelve los detalles de una bici específica.
      parameters:
        - name: bikeId
          in: path
          description: Identificador de bici
          required: true
          schema:
            type: number
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/BikeOutDto'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      tags:
        - bikes
      summary: Elimina una bici
      description: Da de baja una bici cuyo id se para como parametro.
      parameters:
        - name: bikeId
          in: path
          description: Identificador de bici
          required: true
          schema:
            type: number
            format: int64
      responses:
        '204':
          description: No content
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    put:
      tags:
        - bikes
      summary: Modifica una bici
      description: Permite modificar detalles de una bici
      parameters:
        - name: bikeId
          in: path
          description: Identificador de bici
          required: true
          schema:
            type: number
            format: int64
      requestBody:
        description: Nuevos detalles de la bici
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BikeInDto'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BikeOutDto'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /users/{userId}/bikes:
    post:
      tags:
        - bikes
        - users
      summary: Registra una bici
      description: Da de alta una bici
      parameters:
        - name: userId
          in: path
          description: Identificador del usuario propietario de la bici
          required: true
          schema:
            type: number
            format: int64
      requestBody:
        description: Detalles de la nueva bici
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bike'
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BikeOutDto'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /users:
    get:
      tags:
        - users
      summary: Devuelve listado de usuarios.
      description: |
        Lista los usuarios registrados segun filtros aplicados
        
        patapimpatapam
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserOutDto'
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      tags:
        - users
      summary: Registra un usuario
      description: Detalles del nuevo usuario
      requestBody:
        description: Nuevos detalles de la bici
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
            examples:
              standarUser:
                value:
                  name: Pedro
                  surname: Perez
                  email: pepe@perez.com
                  birthDate: 1998-12-11
              premiumUser:
                value:
                  name: Mario
                  surname: Silvio
                  email: mario@mail.com
                  birthDate: 1998-02-11
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserOutDto'
              examples:
                standarUser:
                  value:
                    id: 12
                    name: Pedro
                    surname: Perez
                    email: pepe@perez.com
                    birthDate: 1998-12-11
                premiumUser:
                  value:
                      id: 19
                      name: Mario
                      surname: Silvio
                      email: mario@mail.com
                      birthDate: 1998-02-11
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /users/{userId}:
    get:
      tags:
        - users
      summary: Detalle de un usuario
      description: Devuelve los detalles de un usuario específico.
      parameters:
        - name: userId
          in: path
          description: Identificador de usuario
          required: true
          schema:
            type: number
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserOutDto'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      tags:
        - users
      summary: Elimina un usuario
      description: Da de baja un usuario cuyo id se para como parametro.
      parameters:
        - name: userId
          in: path
          description: Identificador de usuario
          required: true
          schema:
            type: number
            format: int64
      responses:
        '204':
          description: No content
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    put:
      tags:
        - users
      summary: Modifica un usuario
      description: Permite modificar detalles de un usuario
      parameters:
        - name: userId
          in: path
          description: Identificador de usuario
          required: true
          schema:
            type: number
            format: int64
      requestBody:
        description: Nuevos detalles del usuario
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInDto'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserOutDto'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /workshops:
    get:
      tags:
        - workshops
      summary: Lista todos los talleres.
      parameters:
        - name: name
          in: query
          description: Filtro por nombre de taller
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WorkShopOutDto'
    post:
      tags:
        - workshops
      summary: Añade un nuevo taller.
      requestBody:
        description: Datos del nuevo taller
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkShopInDto'
      responses:
        '201':
          description: Taller creado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkShopOutDto'
  /workshops/{workShopId}:
    get:
      tags:
        - workshops
      summary: Detalle de un taller.
      parameters:
        - name: workShopId
          in: path
          description: ID del taller
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkShop'
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      tags:
        - workshops
      summary: Modifica un taller.
      parameters:
        - name: workShopId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Datos actualizados del taller
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkShopInDto'
      responses:
        '200':
          description: Taller actualizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkShopOutDto'
    delete:
      tags:
        - workshops
      summary: Elimina un taller.
      parameters:
        - name: workShopId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Taller eliminado
  /mechanics:
    get:
      tags:
        - mechanics
      summary: Lista todos los mecánicos.
      parameters:
        - name: name
          in: query
          description: Filtro por nombre
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MechanicOutDto'
    post:
      tags:
        - mechanics
      summary: Añade un nuevo mecánico.
      requestBody:
        description: Datos del nuevo mecánico
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MechanicInDto'
      responses:
        '201':
          description: Mecánico creado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MechanicOutDto'
  /mechanics/{mechanicId}:
    get:
      tags:
        - mechanics
      summary: Detalle de un mecánico.
      parameters:
        - name: mechanicId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mechanic'
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      tags:
        - mechanics
      summary: Modifica un mecánico.
      parameters:
        - name: mechanicId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Datos actualizados del mecánico
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MechanicInDto'
      responses:
        '200':
          description: Mecánico actualizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MechanicOutDto'
    delete:
      tags:
        - mechanics
      summary: Elimina un mecánico.
      parameters:
        - name: mechanicId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Mecánico eliminado
  /repair-orders:
    get:
      tags:
        - repair-orders
      summary: Lista todas las órdenes de reparación.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RepairOrderOutDto'
    post:
      tags:
        - repair-orders
      summary: Añade una nueva orden de reparación.
      requestBody:
        description: Datos de la nueva orden
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RepairOrderInDto'
      responses:
        '201':
          description: Orden creada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepairOrderOutDto'
  /repair-orders/{repairOrderId}:
    get:
      tags:
        - repair-orders
      summary: Detalle de una orden de reparación.
      parameters:
        - name: repairOrderId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepairOrder'
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      tags:
        - repair-orders
      summary: Modifica una orden de reparación.
      parameters:
        - name: repairOrderId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Datos actualizados de la orden
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RepairOrderInDto'
      responses:
        '200':
          description: Orden actualizada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepairOrderOutDto'
    delete:
      tags:
        - repair-orders
      summary: Elimina una orden de reparación.
      parameters:
        - name: repairOrderId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Orden eliminada
components:
  schemas:
    Bike:
      type: object
      properties:
        brand:
          type: string
          description: Marca de bici
          example: Trek
        model:
          type: string
          description: Modelo de bici
          example: Caliber
        releaseDate:
          type: string
          format: date
          description: Fecha de lanzamiento
          example: 2021-09-20
        color:
          type: string
          description: Color cuadro bici
          example: Red
    BikeInDto:
      allOf:
        - $ref: '#/components/schemas/Bike'
        - type: object
          properties:
            registrationDate:
                type: string
                format: date
                description: Fecha de registro
                example: 2022-01-01
    BikeOutDto:
      allOf:
        - type: object
          properties:
            id:
              type: number
              format: int64
              description: Identificador de bici
              example: 1
            userId:
              type: number
              format: int64
              description: Identificador del propietario
              example: 8
        - $ref: '#/components/schemas/BikeInDto'
    User:
      type: object
      properties:
        name:
            type: string
            description: Nombre del usuario
        surname:
          type: string
          description: Apellido del usuario
        email:
          type: string
          description: Dirección de correo del usuario
        birthDate:
          type: string
          format: date
          description: Fecha cumpleaños del usuario
      example:
        name: Pedro
        surname: Perez
        email: pepe@perez.com
        birthDate: 1998-12-11
    UserInDto:
      allOf:
        - $ref: '#/components/schemas/User'
    UserOutDto:
      allOf:
        - $ref: '#/components/schemas/User'
        - type: object
          properties:
            id:
              type: number
              format: int64
              description: Identificador del usuario
              example: 12
    WorkShop:
      type: object
      properties:
        name:
          type: string
          description: Nombre del taller
        location:
          type: string
          description: Ubicación del taller
      required:
        - name
        - location
    WorkShopInDto:
      allOf:
        - $ref: '#/components/schemas/WorkShop'
    WorkShopOutDto:
      allOf:
        - $ref: '#/components/schemas/WorkShop'
        - type: object
          properties:
            id:
              type: integer
              description: Identificador del taller
    Mechanic:
      type: object
      properties:
        name:
          type: string
          description: Nombre del mecánico
      required:
        - name
    MechanicInDto:
      allOf:
        - $ref: '#/components/schemas/Mechanic'
    MechanicOutDto:
      allOf:
        - $ref: '#/components/schemas/Mechanic'
        - type: object
          properties:
            id:
              type: integer
              description: Identificador del mecánico
    RepairOrder:
      type: object
      properties:
        description:
          type: string
          description: Descripción de la reparación
      required:
        - description
    RepairOrderInDto:
      allOf:
        - $ref: '#/components/schemas/RepairOrder'
    RepairOrderOutDto:
      allOf:
        - $ref: '#/components/schemas/RepairOrder'
        - type: object
          properties:
            id:
              type: integer
              description: Identificador de la orden
    ErrorResponse:
      type: object
      properties:
        code:
          type: string
          description: Código de error
        message:
          type: string
          description: Descripción del error
    BadRequest:
      allOf:
        - $ref: '#/components/schemas/ErrorResponse'
        - type: object
          properties:
            errorMessages:
              type: array
              items:
                $ref: '#/components/schemas/ErrorMessage'
      example:
        code: 400
        message: Bad Request
    ErrorMessage:
      type: object
      properties:
        fieldName:
          type: string
          description: Campo del error
          example: model
        message:
          type: string
          description: Mensaje de error asociado al campo
          example: El dato es obligatorio
    NotFound:
      allOf:
        - $ref: '#/components/schemas/ErrorResponse'
      example:
        code: 404
        message: Not Found
    InternalServerError:
      allOf:
        - $ref: '#/components/schemas/ErrorResponse'
      example:
        code: 500
        message: Internal Server Error
  responses:
    BadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BadRequest'
    NotFound:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotFound'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InternalServerError'